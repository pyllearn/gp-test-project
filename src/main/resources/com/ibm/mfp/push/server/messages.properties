# Licensed Materials - Property of IBM
# 5725-I43 (C) Copyright IBM Corp. 2011, 2013. All Rights Reserved.
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp.

# NLS_MESSAGEFORMAT_VAR
# NLS_ENCODING=UNICODE
# PII user facing 

#User and Admin messages (0001-999)
logger.resourceNotExist=FPWSE0001E: Not Found - The target resource ''{0}'' does not exist. Check the ''{1}'' parameter.
logger.resourceExist=FPWSE0002E: Conflict - The target resource ''{0}'' already exists. Check the ''{1}'' parameter.
logger.missingCredentials=FPWSE0003E: Missing {0} credentials.
logger.invalidJson=FPWSE0004E: Bad Request - Invalid JSON.
logger.invalidRequest=FPWSE0005E: Invalid value was provided. Check the ''{0}'' parameter value.
logger.unrecognizedParameters=FPWSE0006E: Bad Request - Unrecognized parameter(s) in the request.
logger.invalidQueryParameters=FPWSE0007E: Bad Request - Unrecognized query parameter(s) in the URL.
logger.missingQueryParameters=FPWSE0008E: Not Found - Missing mandatory query parameter in the URL. Check the ''{0}'' parameter.
logger.noDevicesFound=FPWSE0009E: Internal server error. No devices found.
logger.resourceAPIFailed=FPWSE0010E: Internal server error. {0}
logger.messageObjectInvalid=FPWSE0011E: Bad Request - The JSON validation failed at ''{0}''.
logger.cloudantStoreException=FPWSE0012E: Internal server error. An exception occurred while connecting to Cloudant store ''{0}''.
logger.cloudantIndexMigrationRequired=FPWSE0013E: Internal server error. The Cloudant index was created using an unsupported version and requires migration.
logger.msgIdPresent=FPWSE0014E: An message identifier was already set. ''{0}''.
logger.enabledAppNotFound= FPWSE0015E: The application referenced by the applicationId ''{0}'' is either not enabled or not found. 
logger.expiredCertificateRequest=FPWSE0016E: Invalid value. Check the ''{0}'' parameter value. The certificate has expired on ''{1}''.
logger.passwordInvalidRequest=FPWSE0017E: Invalid value. Check the ''{0}'' parameter value. Incorrect password or invalid certificate. 
logger.invalidFormInputException=FPWSE0018E: Invalid value. Check the ''{0}'' parameter value. Incorrect format for certificate file.
logger.invalidProtocolForAppSecret=FPWSE0019E: Invalid protocol for obtaining application secret. Only HTTPS is allowed. {0}
logger.securityIOexception=FPWSE0021E: Error loading the security module ''{0}''.
logger.securitySetupError=FPWSE0022E: The security module required to validate appSecret is not loaded.
logger.userAuthError=FPWSE0023E: Forbidden : UserId in request does not match UserId authorized by security.
logger.deviceAuthError=FPWSE0024E: Forbidden : DeviceId in request does not match DeviceId authorized by security. 

#Admin messages (1001-1999)
logger.unspecifiedtoken=FPWSE1001E: Token not specified correctly. Given {0} and expected {1}.
logger.mbaasapplicationidexists=FPWSE1002E: MBaas application ID {0} already exists.
logger.mbaasapplicationCreationFailed=FPWSE1003E: MBaas application cannot be created.
logger.pushworksstarted=FPWSE1004I: The Push server is started.
logger.initruntimeerror=FPWSE1005I: A runtime exception occurred while initializing the Push server.
logger.contextDestroyed=FPWSE1006I: The Push server is ending.
logger.init=FPWSE1007I: Initialized the logger.
logger.authHeaderNotFound=FPWSE1008E: Application ID parameter not found in the path.
logger.ssl.keystore=FPWSE1009E: Cannot create keystore for SSL HTTP client: ''{0}''.
logger.ssl.httpClient=FPWSE1010E: Cannot initialize SSL context with keystore: ''{0}'', type: ''{1}'', password: ''{2}''.
logger.ssl.key=FPWSE1011E: A key in the keystore cannot be recovered, keystore: ''{0}'', type: ''{1}'', password: ''{2}''.
logger.ssl.algo=FPWSE1012E: Particular cryptographic algorithm is requested but is not available in the environment.
logger.ssl.AliasKeyManager=FPWSE1013E: Unable to find certificate chain with alias: ''{0}''.
logger.ssl.KeyManager.generic=FPWSE1014E: Unable to create keytsore. Keystore: ''{0}'', type: ''{1}'', password: ''{2}''.
logger.ssl.KeyManager.key=FPWSE1015E: A key in the keystore cannot be recovered, path: ''{0}'', type: ''{1}'', password: ''{2}''.
logger.ssl.KeyManager.cert=FPWSE1016E: This exception indicates a variety of certificate problems. Keystore: ''{0}'', type: ''{1}'', password: ''{2}''.
logger.ssl.KeyManager.path=FPWSE1017E: HTTPS connections to backend servers will fail because SSL keystore file ''{0}'' is not available. Change ssl.keystore.* properties in worklight.properties file to point to a SSL keystore.
logger.ssl.KeyManager.io=FPWSE1018E: Unable to create keystore. Path: ''{0}'', type: ''{1}'', password: ''{2}''.
logger.ssl.KeyManager.no.config=FPWSE1019I: HTTPS connections to backend servers might fail because properties ''{0}'' in worklight.properties configuration file are missing.
logger.errorMPNSAuthSendingToNonAuthUri=FPWSE1020E: Notification through Microsoft Push Notification Service (MPNS) was not sent to application ''{0}'' because the connection is supposed to be authenticated but the URI address is not ({1}).
logger.mpnsServiceNameIncorrect=FPWSE1021E: The serviceName for authenticated push notifications for windows Phone 8 for application ''{0}'' is incorrect. Set it to the CN (Common Name) found in the Subject value of the certificate.
logger.mpnsCertificateSyntaxViolation=FPWSE1022E: The certificate for authenticated push notifications for windows Phone 8 for application ''{0}'' is invalid.
logger.mpnsQueueFull=FPWSE1023I: Notification through Microsoft Push Notification Service (MPNS) was not delivered because the MPNS queue is full ({0}). A repeated attempt will be made to deliver the notification later.
logger.errorSendingMPNSPushUnrecognizedNotificationStatus=FPWSE1024I: Notification through Microsoft Push Notification Service (MPNS) was delivered, with an unknown notification status ({1} {0}).
logger.errorSendingMPNSPush=FPWSE1025E: Notification through Microsoft Push Notification Service (MPNS) to subscription ''{0}'' was not delivered due to "{1} {2}".
logger.errorSendingMPNSPushLimit=FPWSE1026E: Notification through Microsoft Push Notification Service (MPNS) to subscription ''{0}'' was not delivered because the per-day throttling limit for unauthenticated service was reached ({1} {2}).
logger.errorSendingMPNSPushInactiveDevice=FPWSE1027I: Notification through Microsoft Push Notification Service (MPNS) to subscription ''{0}'' was not delivered because the device is in a disconnected state ({1} {2}).
logger.errorSendingMPNSPushUnrecognizedError=FPWSE1028E: Notification through Microsoft Push Notification Service (MPNS) to subscription ''{0}'' was not delivered (reason: ''{1}'').
logger.errorSendingMPNSPushUnrecognizedResponseCode=FPWSE1029E: Notification through Microsoft Push Notification Service (MPNS) to subscription ''{0}'' was not delivered, with an unknown response code ({1} {0}).
logger.mpnsNotRegistered=FPWSE1030E: Notification through Microsoft Push Notification Service (MPNS) was not sent to application ''{0}'' because connectivity details to MPNS are not set.
logger.smsFromToTextEmpty=FPWSE1031E: From phone number ''{0}'' or To phone number ''{1}'' or Text ''{2}'' is invalid.
logger.smsConfigNullAbort=FPWSE1032E: SMSConfig is not initialized. Aborting SMS notification, From phone number = ''{0}'', To phone number ''{1}'', text = ''{2}''.
logger.smsGatewayNull=FPWSE1033E: SMS Gateway does not exist. Aborting SMS notification.
logger.smsGatewayConfigInvalid=FPWSE1034W: Invalid gateway configuration with identifier ''{0}''. Aborting SMS notification, phoneNumber = ''{1}'', text = ''{2}''.
logger.invalidResponseCode=FPWSE1035W: Unexpected response code ''{0}'' when invoking gateway ''{1}'' for SMS notification, To phoneNumber = ''{2}'', text = ''{3}''.
logger.gatewayHostnameInvalid=FPWSE1036E: Invalid gateway host name ''{0}''.
logger.methodNotSupported=FPWSE1037E:  Method ''{0}'' is not supported.
logger.successCode=FPWSE1038I: Response code ''{0}'' when starting gateway ''{1}'' for SMS notification, To phoneNumber = ''{2}'', text = ''{3}''.
logger.unhandledException=FPWSE1039E: Unhandled exception : {0}.
logger.senderFailed=FPWSE1040E: SMS sender failed for application ''{0}''.
logger.smsConfigNull=FPWSE1041E: SMS configuration is null.
logger.smsConfigFailed=FPWSE1042E: SMS configuration failed.
logger.deviceByTokenDeleted=FPWSE1044I: Invalid device ''{0}'' with token ''{1}'' has been deleted.
logger.mpnsUnAuthenticatedPush=FPWSE1045W: Using Microsoft Push Notification Service (MPNS) non-authenticated push, as credentials for an authenticated push are missing. 
logger.mediatorRegistrationFailed=FPWSE1046E: Failed to register application ''{0}'' for mediator ''{1}''. The notifications will not be delivered to that application.
logger.getApplicationsFailed=FPWSE1047E: Failed to register all applications with mediators.
logger.apnsNotRegistered=FPWSE1048E:: Notification through Apple Push Notification Service (APNS) was not sent to application ''{0}'' because connectivity details to APNS are not set.
logger.inactiveDevices=FPWSE1049I: Subscriptions to Apple Push Notification Service (APNS) were removed because the devices are inactive: ''{0}''.
logger.appMediator=FPWSE1050W: Registration of application {0} to mediator occured more than once.
logger.gcmNotRegistered=FPWSE1051E: Notification through Google Cloud Messaging (GCM) was not sent to application ''{0}'' because connectivity details to GCM are not set.
logger.errorSendingGCMPushAuthError=FPWSE1052E: Notification through Google Cloud Messaging (GCM) was not delivered to registration ID ''{0}'' because of previous authentication errors.
logger.deviceRegistrationID=FPWSE1053E: Subscription to Google Cloud Messaging (GCM) with registration ID ''{0}'' is removed, because the notification was rejected by the server ({1}).
logger.errorSendingGCMPushToRegistrationId=FPWSE1054E: Notification through Google Cloud Messaging (GCM) will not be delivered to registration ID ''{0}'' ({1}).
logger.invokeGCMFailed=FPWSE1055E: Failed to start Google Cloud Messaging (GCM) push service.
logger.smsNotRegistered=FPWSE1056E: Notification through SMS gateway was not sent to application ''{0}'' because connectivity details to the gateway are not set.
logger.mediatorUnregistrationFailed=FPWSE1057W: Unable to deregister application ''{0}'' for push mediator ''{1}'' because the mediator does not exist.
logger.messageReceiptDeliveryAdded=FPWSE1058I: Added the message receipt for message ''{0}'' of device ''{1}''.
logger.messageReceiptDeliveryFailed=FPWSE1059E: Failed to add the message receipt for message ''{0}'' of device ''{1}''.
logger.gcmDeleted=FPWSE1060W: Google Cloud Messaging (GCM): {0} notifications deleted from the queue {1} because the waiting time is more than {2} sec.
logger.errorSendingGCMPush=FPWSE1061E: Error sending Google Cloud Messaging (GCM) push notification (reason: ''{0}'').
logger.unableParseHeader=FPWSE1062W: Unable to parse ''Retry-After'' header received from Google Cloud Messaging (GCM) server ''{0}''.
logger.numberOfDevices=FPWSE1063I: Notification will be sent to ''{0}'' devices.
logger.authCredentialsInvalid=FPWSE1064E: Authentication credentials are invalid. 
logger.deviceByTokenUpdated=FPWSE1065I: Device ''{0}'' updated with new token ''{1}''.
logger.deviceNotification=FPWSE1066I: Notification to be sent to device ''{0}''.
logger.mediatorError=FPWSE1067E: An Exception occurred in the mediator.
logger.responseConversionFailed=FPWS1068E: Failed to convert response object to JSON. 
logger.digestTimestampInvalid=FPWSE1069E: Digest ''{0}''or Time ''{1}'' header is invalid.
logger.timestampInvalid=FPWSE1070E: Time ''{0}'' header is invalid.
logger.authStatus=FPWSE1071I: Authentication status for enterprise ''{0}'' is {1}.
logger.authFailed=FPWSE1072E: Authentication failed for the request with enterpriseID ''{0}''.
logger.addNotificationToQueueFailed=FPWSE1073E: Notification will not be delivered through {0} because the internal notifications queue {0} is full and the notification cannot be added.
logger.simulationMode=FPWSE1074I: (Simulation mode) Notification sent to Apple Push Notification Service (APNS), token= {0}.
logger.skipPushNotification=FPWSE1075I: Simulation mode - skipping push notification send: {0}.
logger.skipSMSNotification=FPWSE10756I: Simulation mode - skipping SMS notification. Gateway = ''{0}'', phoneNumber = ''{1}'', text = ''{2}''.
logger.apns.connections=FPWSE1077I: Number of connections to Apple Push Notification Service (APNS) = {0}.
logger.smsToTextEmpty=FPWSE1078E: Phone number ''{0}'' or text ''{1}'' is invalid.
logger.errorAddingTokenToGCMKey=FPWSE1079W: Google Cloud Messaging (GCM) push token ''{0}'' is not added to GCM notification key {1}.
logger.errorDeletingTokenFromGCMKey=FPWSE1080W: Google Cloud Messaging (GCM) push token ''{0}'' is not deleted from GCM notification key {1}.
logger.submitNotificationFailed=FPWSE1081E: Failure sending notification. See the server log file for more details.
logger.apnsConnectionClosed=FPWSE1082E: Connection to Apple Push Notification Service (APNS) closed. Delivery error: {0}, error code: {1}, identifier: {2}.
logger.apnsFailedSend=FPWSE1083E: Failure sending Apple Push Notification Service (APNS) notification with identifier {0}, device token: {1}.
logger.apnsFailedSendNoDetails=FPWSE1084E: Failure sending Apple Push Notification Service (APNS) notification.
logger.errorSendingWNSPush=FPWSE1085E: Notification through Windows Push Notification Service (WNS) to subscription ''{0}'' was not delivered due to "{1} {2}".
logger.errorSendingWNSPushDropped=FPWSE1086E: Notification through Windows Push Notification Service (WNS) to subscription ''{0}'' was dropped due to "{1} {2} {3}".
logger.errorSendingWNSPushUnrecognizedError=FPWSE1087E: Notification through Windows Push Notification Service (WNS) to subscription ''{0}'' was not delivered (reason: ''{1}'').
logger.errorSendingWNSPushUnrecognizedResponseCode=FPWSE1088E: Notification through Windows Push Notification Service (WNS) to subscription ''{0}'' was not delivered, with an unknown response code ({1} {0}).
logger.errorGetWNSOAuthTokenUnrecognizedError=FPWSE1089E: Failure getting WNS oAuth token for package Id ''{0}'' (reason: ''{1}'').
logger.errorGetWNSOAuthToken=FPWSE1090E: Failure getting Windows Push Notification Service (WNS) oAuth token for package Id ''{0}'' because of "{1} {2}".
logger.windowsDeleted=FPWSE1091W: Windows: {0} notifications deleted from the queue {1} because the queue size exceeded.
logger.wnsNotRegistered=FPWSE1092E: Notification through Windows Push Notification Service (WNS) was not sent to application ''{0}'' because connectivity details to WNS are not set.
logger.filterParseError=FPWSE1093E: Bad Request - The filter could not be interpreted by the push service. Error is ''{0}''.
logger.invalidAPNSDeviceToken=FPWSE1094E: Invalid device tokens are found for some devices. This might be due to usage of test data.
logger.propertiesNotFound=FPWSE1095W: The Push service configuration file is missing.
logger.billingFailure=FPWSE1096E: There was an issue with initialization of billing provider for Push. The error is ''{0}''
logger.billingIssue=FPWSE1097E There was an issue with billing provider for Push. Error is ''{0}''
logger.apnsConnectionFailed=FPWSE1098E: Connection to Apple Push Notification Service (APNS) failed.
logger.apnsSuccess=FPWSE1092I: Connected to the APNS server. 
logger.apnsDisconnect=FPWSE1099E: Connection to Apple Push Notification Service (APNS) disconnected.
